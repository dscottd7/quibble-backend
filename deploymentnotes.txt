Brendan - Oct 31
- trying to keep some notes here on docker image deployment to google cloud run
- things I have changed that I think are useful:
1. The CMD in Dockerfile should be in JSON array format (this is more reliable): CMD ["uvicorn", "main:app", "--port", "8000", "--host", "0.0.0.0"]
2. The "--reload" flag on our uvicorn server should NOT be used for deployment (just local dev)
3. The desired port (8000) should be "exposed" in the Dockerfile: EXPOSE 8000 
4. ***MOST IMPORTANT - if using a Mac, when you go to create an image to deploy to Google Cloud, you must build with the "--platform linux/amd64" flag*****
5. Related to #4 - the current Dockerfile has a few lines present that were added to get Google Chrome working for Selenium, which appears to only be supported for linux/amd64.  
When building images to deploy to Google Cloud, amd64 is the only supported architecture, but I might need to figure out a way to allow Mac users (like myself) to build images for local testing.


How to: build docker image, push to docker hub, deploy via Google Cloud Run UI
1. Build image: docker build --platform linux/amd64 -t jbh14/quibble-backend:1.0.14 .
- (can omit the repo name, "jbh14/quibble-backend" in this case, if you want to build locally)
- "--platform linux/amd64" is CRUCIAL for Mac users to build images that can be deployed to Google Cloud Run, but should not be used for local testing
2. If wanted to deploy to Google Cloud Run, Login to docker if needed: docker login
3. Push image to docker hub: docker push jbh14/quibble-backend:1.0.14
4. Create Cloud Run deployment via UI - list docker hub image URL, allow unauthenticated invocations, set port to 8000

How to: build and test locally:
1. Build image: docker build -t quibblebackend-image1 .
2. Run image locally on port 8000, and open bash script in container: docker run --rm -it -p 8000:8000 quibblebackend-image1 bash
3. To launch uvicorn server in local container: uvicorn app.main:app --host=0.0.0.0
4. Alternative apporach - "compose up" (uses compose.yml file to build image and run containter): docker-compose up --build
- "--build" flag is to rebuild the image if it already exists